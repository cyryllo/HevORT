# This file contains common pin mappings for Duet2 Eth/Wifi boards. To
# use this config, the firmware should be compiled for the SAM4E8E.

# See docs/Config_Reference.md for a description of parameters.

[include mainsail.cfg]
[include ebbcanbus.cfg]
#[include eddy.cfg]
#[include chamber.cfg]
#[include cleannozzle.cfg]
[include KAMP_Settings.cfg]

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_sam4e8e_00323053354B50483032303337303632-if00
##--------------------------------------------------------------------

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 6000
max_z_velocity: 15
max_z_accel: 120
square_corner_velocity: 5.0  


#####################################################################
#   X/Y Stepper Settings
#####################################################################

[stepper_x]
##  Connected to X (B Motor)
step_pin: PD6
dir_pin: PD11
enable_pin: !PC6
microsteps: 16
full_steps_per_rotation: 400
rotation_distance: 40
endstop_pin: EBBCan: PB6
position_min: 0
position_endstop: 0
position_max: 500.5

homing_speed: 50                #Max 100
homing_retract_dist: 5
#homing_positive_dir: true

[tmc2660 stepper_x]
cs_pin: PD14
spi_bus: usart1
run_current: 1.600
sense_resistor: 0.051

[stepper_y]
##  Connected to Y (A Motor)
step_pin: PD7
dir_pin: PD12
enable_pin: !PC6
microsteps: 16
full_steps_per_rotation: 400
rotation_distance: 40
endstop_pin: ^PA2
position_min: 0
position_endstop: 0
position_max: 510

homing_speed: 50                #Max 100
homing_retract_dist: 5
#homing_positive_dir: true

[tmc2660 stepper_y]
cs_pin: PC9
spi_bus: usart1
run_current: 1.600
sense_resistor: 0.051

#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Left Z Motor
## Z Stepper Socket
[stepper_z]
step_pin: PD8
dir_pin: PD13
enable_pin: !PC6
microsteps: 16
rotation_distance: 4
full_steps_per_rotation: 400
endstop_pin: probe:z_virtual_endstop
#endstop_pin: PD10  # E0 endstop
#endstop_pin: PC16  # E1 endstop
position_min: -10
position_max: 460

homing_speed: 10 # Prędkość homingu w mm/s dla pierwszego przejazdu
second_homing_speed: 5 # Wolniejsza prędkość homingu w mm/s dla drugiego przejazdu (większa precyzja)
homing_retract_dist: 10 # 

[tmc2660 stepper_z]
cs_pin: PC10
spi_bus: usart1
run_current: 1.200
sense_resistor: 0.051

##  Z1 Stepper - Center Z Motor
##  E0 Stepper Socket
[stepper_z1]
step_pin: PD5
dir_pin: PA1
enable_pin: !PC6
rotation_distance: 4
microsteps: 16
full_steps_per_rotation: 400 

[tmc2660 stepper_z1]
cs_pin: PC17
spi_bus: usart1
run_current: 1.200
sense_resistor: 0.051

##  Z2 Stepper - Right Z Motor
##  E1 Stepper Socket
[stepper_z2]
step_pin: PD4
dir_pin: PD9
enable_pin: !PC6
rotation_distance: 4
microsteps: 16
full_steps_per_rotation: 400 

[tmc2660 stepper_z2]
cs_pin: PC25
spi_bus: usart1
run_current: 1.200
sense_resistor: 0.051

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
heater_pin: !PA19
sensor_type: Generic 3950
sensor_pin: PC13
max_power: 1.0
min_temp: 0
max_temp: 130
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#   Fan Control
#####################################################################

[controller_fan Chlodzenie_elektroniki]
##  Chłodzenie stepstick
pin: PC23
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0
fan_speed: 1.0
stepper: stepper_x, stepper_y

#[fan]
#pin: PC23  # FAN0

#[heater_fan heatbreak_cooling_fan]
#pin: PC26  # FAN1

#[heater_fan board_cooling_fan]
#pin: PA0  # FAN2


[virtual_sdcard]
path: /home/pi/printer_data/gcodes

#####################################################################
#   Macros
#####################################################################
[z_tilt]
##  Use Z_TILT_ADJUST to level the bed left to right.
##  z_positions: Location of toolhead

##--------------------------------------------------------------------
## Uncomment below for 250mm build
z_positions:
    -38.188, 20.717
    230.521, 492.493
    499.23, -20.717
points:
    20, 20
    240, 465
    465, 20
##--------------------------------------------------------------------

speed: 100
horizontal_move_z: 10
retries: 3
retry_tolerance: 0.05

[safe_z_home]
home_xy_position: 20,20  
z_hop: 10
z_hop_speed: 10.0

# Enable object exclusion
[exclude_object]


[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}


[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - PLEASE CUSTOMISE THE SCRIPT
gcode:
    {% set target_bed = params.BED|int %}
    {% set target_extruder = params.EXTRUDER|int %}
    
    M190 S{target_bed}            ; set and wait for bed to reach temp
    M117 Homing...                 ; display message
    G28 Y0 X0 Z0
    Z_TILT_ADJUST
    BED_MESH_CALIBRATE
    G28 Y0 X0 Z0
    
    M109 S{target_extruder}       ; set and wait for hot end to reach temp

    #Purge Line Gcode
    LINE_PURGE
    #G92 E0;
    #G90
    #G0 X0 Y0 F6000
    #G0 Z0.4
    #G91
    #G1 X80 E10 F1200;
    #G1 E-0.5;
    #G92 E0;
    #G90
    
   
    
    G1 Z10.0 F600 ;move the platform down 10mm
    G92 E0 ;zero the extruded length again
    #G1 F9000
    M117 Printing...

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script
gcode:
    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
    
    #   Check end position to determine safe directions to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}
    
    #  Commence PRINT_END
    M400                             ; wait for buffer to clear
    G92 E0                           ; zero the extruder
    G1 E-4.0 F3600                   ; retract
    G91                              ; relative positioning
    G0 Z{z_safe} F3600               ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000    ; move nozzle to remove stringing
    
    M104 S0                          ; turn off hotend
    M140 S0                          ; turn off bed
    M106 S0                          ; turn off fan
    G90                              ; absolute positioning
    G0 X{max_x} Y500 F3600   ; park nozzle at rear
    M117 Finished!


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  TURN_OFF_HEATERS
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  BASE_CANCEL_PRINT

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 E-{E} F2100
  G1 Z{z_safe} F900
  G90
  G1 X{x_park} Y{y_park} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### end of definitions #####
  G91
  G1 E{E} F2100
  RESTORE_GCODE_STATE NAME=PAUSE_state
  BASE_RESUME

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 41.563
#*# pid_ki = 15.395
#*# pid_kd = 28.053
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 57.832
#*# pid_ki = 1.890
#*# pid_kd = 442.418
